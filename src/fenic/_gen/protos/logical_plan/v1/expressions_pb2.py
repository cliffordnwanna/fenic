# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: logical_plan/v1/expressions.proto
# Protobuf Python Version: 5.29.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    1,
    '',
    'logical_plan/v1/expressions.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from fenic._gen.protos.logical_plan.v1 import complex_types_pb2 as logical__plan_dot_v1_dot_complex__types__pb2
from fenic._gen.protos.logical_plan.v1 import datatypes_pb2 as logical__plan_dot_v1_dot_datatypes__pb2
from fenic._gen.protos.logical_plan.v1 import enums_pb2 as logical__plan_dot_v1_dot_enums__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!logical_plan/v1/expressions.proto\x12\x0flogical_plan.v1\x1a#logical_plan/v1/complex_types.proto\x1a\x1flogical_plan/v1/datatypes.proto\x1a\x1blogical_plan/v1/enums.proto\"\xfa-\n\x0bLogicalExpr\x12\x35\n\x06\x63olumn\x18\x01 \x01(\x0b\x32\x1b.logical_plan.v1.ColumnExprH\x00R\x06\x63olumn\x12\x38\n\x07literal\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LiteralExprH\x00R\x07literal\x12\x32\n\x05\x61lias\x18\x03 \x01(\x0b\x32\x1a.logical_plan.v1.AliasExprH\x00R\x05\x61lias\x12/\n\x04sort\x18\x04 \x01(\x0b\x32\x19.logical_plan.v1.SortExprH\x00R\x04sort\x12\x32\n\x05index\x18\x05 \x01(\x0b\x32\x1a.logical_plan.v1.IndexExprH\x00R\x05index\x12\x32\n\x05\x61rray\x18\x06 \x01(\x0b\x32\x1a.logical_plan.v1.ArrayExprH\x00R\x05\x61rray\x12\x35\n\x06struct\x18\x07 \x01(\x0b\x32\x1b.logical_plan.v1.StructExprH\x00R\x06struct\x12/\n\x04\x63\x61st\x18\x08 \x01(\x0b\x32\x19.logical_plan.v1.CastExprH\x00R\x04\x63\x61st\x12\x35\n\x08not_expr\x18\t \x01(\x0b\x32\x18.logical_plan.v1.NotExprH\x00R\x07notExpr\x12;\n\x08\x63oalesce\x18\n \x01(\x0b\x32\x1d.logical_plan.v1.CoalesceExprH\x00R\x08\x63oalesce\x12\x32\n\x07in_expr\x18\x0b \x01(\x0b\x32\x17.logical_plan.v1.InExprH\x00R\x06inExpr\x12\x36\n\x07is_null\x18\x0c \x01(\x0b\x32\x1b.logical_plan.v1.IsNullExprH\x00R\x06isNull\x12\x45\n\x0c\x61rray_length\x18\r \x01(\x0b\x32 .logical_plan.v1.ArrayLengthExprH\x00R\x0b\x61rrayLength\x12K\n\x0e\x61rray_contains\x18\x0e \x01(\x0b\x32\".logical_plan.v1.ArrayContainsExprH\x00R\rarrayContains\x12;\n\x08greatest\x18\x0f \x01(\x0b\x32\x1d.logical_plan.v1.GreatestExprH\x00R\x08greatest\x12\x32\n\x05least\x18\x10 \x01(\x0b\x32\x1a.logical_plan.v1.LeastExprH\x00R\x05least\x12W\n\x12unresolved_literal\x18\x11 \x01(\x0b\x32&.logical_plan.v1.UnresolvedLiteralExprH\x00R\x11unresolvedLiteral\x12\x41\n\narithmetic\x18\x14 \x01(\x0b\x32\x1f.logical_plan.v1.ArithmeticExprH\x00R\narithmetic\x12\x38\n\x07\x62oolean\x18\x15 \x01(\x0b\x32\x1c.logical_plan.v1.BooleanExprH\x00R\x07\x62oolean\x12Z\n\x13\x65quality_comparison\x18\x16 \x01(\x0b\x32\'.logical_plan.v1.EqualityComparisonExprH\x00R\x12\x65qualityComparison\x12W\n\x12numeric_comparison\x18\x17 \x01(\x0b\x32&.logical_plan.v1.NumericComparisonExprH\x00R\x11numericComparison\x12\x45\n\x0csemantic_map\x18\x1e \x01(\x0b\x32 .logical_plan.v1.SemanticMapExprH\x00R\x0bsemanticMap\x12Q\n\x10semantic_extract\x18\x1f \x01(\x0b\x32$.logical_plan.v1.SemanticExtractExprH\x00R\x0fsemanticExtract\x12H\n\rsemantic_pred\x18  \x01(\x0b\x32!.logical_plan.v1.SemanticPredExprH\x00R\x0csemanticPred\x12N\n\x0fsemantic_reduce\x18! \x01(\x0b\x32#.logical_plan.v1.SemanticReduceExprH\x00R\x0esemanticReduce\x12T\n\x11semantic_classify\x18\" \x01(\x0b\x32%.logical_plan.v1.SemanticClassifyExprH\x00R\x10semanticClassify\x12T\n\x11\x61nalyze_sentiment\x18# \x01(\x0b\x32%.logical_plan.v1.AnalyzeSentimentExprH\x00R\x10\x61nalyzeSentiment\x12\x41\n\nembeddings\x18$ \x01(\x0b\x32\x1f.logical_plan.v1.EmbeddingsExprH\x00R\nembeddings\x12W\n\x12semantic_summarize\x18% \x01(\x0b\x32&.logical_plan.v1.SemanticSummarizeExprH\x00R\x11semanticSummarize\x12U\n\x12semantic_parse_pdf\x18& \x01(\x0b\x32%.logical_plan.v1.SemanticParsePDFExprH\x00R\x10semanticParsePdf\x12Z\n\x13\x65mbedding_normalize\x18( \x01(\x0b\x32\'.logical_plan.v1.EmbeddingNormalizeExprH\x00R\x12\x65mbeddingNormalize\x12]\n\x14\x65mbedding_similarity\x18) \x01(\x0b\x32(.logical_plan.v1.EmbeddingSimilarityExprH\x00R\x13\x65mbeddingSimilarity\x12;\n\x08textract\x18\x32 \x01(\x0b\x32\x1d.logical_plan.v1.TextractExprH\x00R\x08textract\x12?\n\ntext_chunk\x18\x33 \x01(\x0b\x32\x1e.logical_plan.v1.TextChunkExprH\x00R\ttextChunk\x12[\n\x14recursive_text_chunk\x18\x34 \x01(\x0b\x32\'.logical_plan.v1.RecursiveTextChunkExprH\x00R\x12recursiveTextChunk\x12\x45\n\x0c\x63ount_tokens\x18\x35 \x01(\x0b\x32 .logical_plan.v1.CountTokensExprH\x00R\x0b\x63ountTokens\x12\x35\n\x06\x63oncat\x18\x36 \x01(\x0b\x32\x1b.logical_plan.v1.ConcatExprH\x00R\x06\x63oncat\x12?\n\narray_join\x18\x37 \x01(\x0b\x32\x1e.logical_plan.v1.ArrayJoinExprH\x00R\tarrayJoin\x12;\n\x08\x63ontains\x18\x38 \x01(\x0b\x32\x1d.logical_plan.v1.ContainsExprH\x00R\x08\x63ontains\x12\x45\n\x0c\x63ontains_any\x18\x39 \x01(\x0b\x32 .logical_plan.v1.ContainsAnyExprH\x00R\x0b\x63ontainsAny\x12\x32\n\x05rlike\x18: \x01(\x0b\x32\x1a.logical_plan.v1.RLikeExprH\x00R\x05rlike\x12/\n\x04like\x18; \x01(\x0b\x32\x19.logical_plan.v1.LikeExprH\x00R\x04like\x12\x32\n\x05ilike\x18< \x01(\x0b\x32\x1a.logical_plan.v1.ILikeExprH\x00R\x05ilike\x12\x39\n\x08ts_parse\x18= \x01(\x0b\x32\x1c.logical_plan.v1.TsParseExprH\x00R\x07tsParse\x12\x42\n\x0bstarts_with\x18> \x01(\x0b\x32\x1f.logical_plan.v1.StartsWithExprH\x00R\nstartsWith\x12<\n\tends_with\x18? \x01(\x0b\x32\x1d.logical_plan.v1.EndsWithExprH\x00R\x08\x65ndsWith\x12\x45\n\x0cregexp_split\x18@ \x01(\x0b\x32 .logical_plan.v1.RegexpSplitExprH\x00R\x0bregexpSplit\x12?\n\nsplit_part\x18\x41 \x01(\x0b\x32\x1e.logical_plan.v1.SplitPartExprH\x00R\tsplitPart\x12H\n\rstring_casing\x18\x42 \x01(\x0b\x32!.logical_plan.v1.StringCasingExprH\x00R\x0cstringCasing\x12\x42\n\x0bstrip_chars\x18\x43 \x01(\x0b\x32\x1f.logical_plan.v1.StripCharsExprH\x00R\nstripChars\x12\x38\n\x07replace\x18\x44 \x01(\x0b\x32\x1c.logical_plan.v1.ReplaceExprH\x00R\x07replace\x12?\n\nstr_length\x18\x45 \x01(\x0b\x32\x1e.logical_plan.v1.StrLengthExprH\x00R\tstrLength\x12\x42\n\x0b\x62yte_length\x18\x46 \x01(\x0b\x32\x1f.logical_plan.v1.ByteLengthExprH\x00R\nbyteLength\x12\x32\n\x05jinja\x18G \x01(\x0b\x32\x1a.logical_plan.v1.JinjaExprH\x00R\x05jinja\x12\x42\n\x0b\x66uzzy_ratio\x18H \x01(\x0b\x32\x1f.logical_plan.v1.FuzzyRatioExprH\x00R\nfuzzyRatio\x12_\n\x16\x66uzzy_token_sort_ratio\x18I \x01(\x0b\x32(.logical_plan.v1.FuzzyTokenSortRatioExprH\x00R\x13\x66uzzyTokenSortRatio\x12\\\n\x15\x66uzzy_token_set_ratio\x18J \x01(\x0b\x32\'.logical_plan.v1.FuzzyTokenSetRatioExprH\x00R\x12\x66uzzyTokenSetRatio\x12)\n\x02jq\x18P \x01(\x0b\x32\x17.logical_plan.v1.JqExprH\x00R\x02jq\x12<\n\tjson_type\x18Q \x01(\x0b\x32\x1d.logical_plan.v1.JsonTypeExprH\x00R\x08jsonType\x12H\n\rjson_contains\x18R \x01(\x0b\x32!.logical_plan.v1.JsonContainsExprH\x00R\x0cjsonContains\x12=\n\nmd_to_json\x18Z \x01(\x0b\x32\x1d.logical_plan.v1.MdToJsonExprH\x00R\x08mdToJson\x12S\n\x12md_get_code_blocks\x18[ \x01(\x0b\x32$.logical_plan.v1.MdGetCodeBlocksExprH\x00R\x0fmdGetCodeBlocks\x12L\n\x0fmd_generate_toc\x18\\ \x01(\x0b\x32\".logical_plan.v1.MdGenerateTocExprH\x00R\rmdGenerateToc\x12\x61\n\x18md_extract_header_chunks\x18] \x01(\x0b\x32&.logical_plan.v1.MdExtractHeaderChunksH\x00R\x15mdExtractHeaderChunks\x12/\n\x04when\x18\x64 \x01(\x0b\x32\x19.logical_plan.v1.WhenExprH\x00R\x04when\x12>\n\totherwise\x18\x65 \x01(\x0b\x32\x1e.logical_plan.v1.OtherwiseExprH\x00R\totherwise\x12,\n\x03sum\x18n \x01(\x0b\x32\x18.logical_plan.v1.SumExprH\x00R\x03sum\x12,\n\x03\x61vg\x18o \x01(\x0b\x32\x18.logical_plan.v1.AvgExprH\x00R\x03\x61vg\x12\x32\n\x05\x63ount\x18p \x01(\x0b\x32\x1a.logical_plan.v1.CountExprH\x00R\x05\x63ount\x12,\n\x03max\x18q \x01(\x0b\x32\x18.logical_plan.v1.MaxExprH\x00R\x03max\x12,\n\x03min\x18r \x01(\x0b\x32\x18.logical_plan.v1.MinExprH\x00R\x03min\x12\x32\n\x05\x66irst\x18s \x01(\x0b\x32\x1a.logical_plan.v1.FirstExprH\x00R\x05\x66irst\x12/\n\x04list\x18t \x01(\x0b\x32\x19.logical_plan.v1.ListExprH\x00R\x04list\x12\x36\n\x07std_dev\x18u \x01(\x0b\x32\x1b.logical_plan.v1.StdDevExprH\x00R\x06stdDev\x12\x30\n\x04year\x18\x82\x01 \x01(\x0b\x32\x19.logical_plan.v1.YearExprH\x00R\x04year\x12\x33\n\x05month\x18\x83\x01 \x01(\x0b\x32\x1a.logical_plan.v1.MonthExprH\x00R\x05month\x12-\n\x03\x64\x61y\x18\x84\x01 \x01(\x0b\x32\x18.logical_plan.v1.DayExprH\x00R\x03\x64\x61y\x12\x30\n\x04hour\x18\x85\x01 \x01(\x0b\x32\x19.logical_plan.v1.HourExprH\x00R\x04hour\x12\x36\n\x06minute\x18\x86\x01 \x01(\x0b\x32\x1b.logical_plan.v1.MinuteExprH\x00R\x06minute\x12\x36\n\x06second\x18\x87\x01 \x01(\x0b\x32\x1b.logical_plan.v1.SecondExprH\x00R\x06second\x12\x45\n\x0bmillisecond\x18\x88\x01 \x01(\x0b\x32 .logical_plan.v1.MilliSecondExprH\x00R\x0bmillisecond\x12:\n\x08\x64\x61te_add\x18\x8c\x01 \x01(\x0b\x32\x1c.logical_plan.v1.DateAddExprH\x00R\x07\x64\x61teAdd\x12I\n\rtimestamp_add\x18\x8d\x01 \x01(\x0b\x32!.logical_plan.v1.TimestampAddExprH\x00R\x0ctimestampAdd\x12@\n\ndate_trunc\x18\x8e\x01 \x01(\x0b\x32\x1e.logical_plan.v1.DateTruncExprH\x00R\tdateTrunc\x12=\n\tdate_diff\x18\x8f\x01 \x01(\x0b\x32\x1d.logical_plan.v1.DateDiffExprH\x00R\x08\x64\x61teDiff\x12L\n\x0etimestamp_diff\x18\x90\x01 \x01(\x0b\x32\".logical_plan.v1.TimestampDiffExprH\x00R\rtimestampDiff\x12-\n\x03now\x18\x96\x01 \x01(\x0b\x32\x18.logical_plan.v1.NowExprH\x00R\x03now\x12\x37\n\x07to_date\x18\xa0\x01 \x01(\x0b\x32\x1b.logical_plan.v1.ToDateExprH\x00R\x06toDate\x12\x46\n\x0cto_timestamp\x18\xa1\x01 \x01(\x0b\x32 .logical_plan.v1.ToTimestampExprH\x00R\x0btoTimestamp\x12\x43\n\x0b\x64\x61te_format\x18\xa2\x01 \x01(\x0b\x32\x1f.logical_plan.v1.DateFormatExprH\x00R\ndateFormatB\x0b\n\texpr_type\" \n\nColumnExpr\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\"y\n\x0bLiteralExpr\x12\x32\n\x05value\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.ScalarValueR\x05value\x12\x36\n\tdata_type\x18\x02 \x01(\x0b\x32\x19.logical_plan.v1.DataTypeR\x08\x64\x61taType\"Q\n\tAliasExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\"y\n\x08SortExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x1c\n\tascending\x18\x02 \x01(\x08R\tascending\x12\x1d\n\nnulls_last\x18\x03 \x01(\x08R\tnullsLast\"q\n\tIndexExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05index\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05index\"?\n\tArrayExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"@\n\nStructExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"t\n\x08\x43\x61stExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x36\n\tdest_type\x18\x02 \x01(\x0b\x32\x19.logical_plan.v1.DataTypeR\x08\x64\x65stType\";\n\x07NotExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"B\n\x0c\x43oalesceExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"n\n\x06InExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05other\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05other\"W\n\nIsNullExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x17\n\x07is_null\x18\x02 \x01(\x08R\x06isNull\"C\n\x0f\x41rrayLengthExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"y\n\x11\x41rrayContainsExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05other\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05other\"\xad\x01\n\x0e\x41rithmeticExpr\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05right\x12\x35\n\x08operator\x18\x03 \x01(\x0e\x32\x19.logical_plan.v1.OperatorR\x08operator\"\xaa\x01\n\x0b\x42ooleanExpr\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05right\x12\x35\n\x08operator\x18\x03 \x01(\x0e\x32\x19.logical_plan.v1.OperatorR\x08operator\"\xb4\x01\n\x15NumericComparisonExpr\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05right\x12\x35\n\x08operator\x18\x03 \x01(\x0e\x32\x19.logical_plan.v1.OperatorR\x08operator\"\xb5\x01\n\x16\x45qualityComparisonExpr\x12\x30\n\x04left\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04left\x12\x32\n\x05right\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05right\x12\x35\n\x08operator\x18\x03 \x01(\x0e\x32\x19.logical_plan.v1.OperatorR\x08operator\"\xd5\x03\n\x0fSemanticMapExpr\x12\x1a\n\x08template\x18\x01 \x01(\tR\x08template\x12\x16\n\x06strict\x18\x02 \x01(\x08R\x06strict\x12\x32\n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\x12\x1d\n\nmax_tokens\x18\x04 \x01(\x05R\tmaxTokens\x12 \n\x0btemperature\x18\x05 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x06 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x12U\n\x0fresponse_format\x18\x07 \x01(\x0b\x32\'.logical_plan.v1.ResolvedResponseFormatH\x01R\x0eresponseFormat\x88\x01\x01\x12\x46\n\x08\x65xamples\x18\x08 \x01(\x0b\x32%.logical_plan.v1.MapExampleCollectionH\x02R\x08\x65xamples\x88\x01\x01\x42\x0e\n\x0c_model_aliasB\x12\n\x10_response_formatB\x0b\n\t_examples\"\xb5\x02\n\x13SemanticExtractExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12P\n\x0fresponse_format\x18\x02 \x01(\x0b\x32\'.logical_plan.v1.ResolvedResponseFormatR\x0eresponseFormat\x12\x1d\n\nmax_tokens\x18\x03 \x01(\x05R\tmaxTokens\x12 \n\x0btemperature\x18\x04 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x05 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x42\x0e\n\x0c_model_alias\"\xd2\x02\n\x10SemanticPredExpr\x12\x1a\n\x08template\x18\x01 \x01(\tR\x08template\x12\x16\n\x06strict\x18\x02 \x01(\x08R\x06strict\x12\x32\n\x05\x65xprs\x18\x03 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\x12 \n\x0btemperature\x18\x04 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x05 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x12L\n\x08\x65xamples\x18\x06 \x01(\x0b\x32+.logical_plan.v1.PredicateExampleCollectionH\x01R\x08\x65xamples\x88\x01\x01\x42\x0e\n\x0c_model_aliasB\x0b\n\t_examples\"\xa1\x03\n\x12SemanticReduceExpr\x12 \n\x0binstruction\x18\x01 \x01(\tR\x0binstruction\x12;\n\ninput_expr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tinputExpr\x12\x1d\n\nmax_tokens\x18\x03 \x01(\x05R\tmaxTokens\x12 \n\x0btemperature\x18\x04 \x01(\x01R\x0btemperature\x12L\n\x13group_context_exprs\x18\x05 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x11groupContextExprs\x12\x42\n\x0eorder_by_exprs\x18\x06 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x0corderByExprs\x12I\n\x0bmodel_alias\x18\x07 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x42\x0e\n\x0c_model_alias\"\xe3\x02\n\x14SemanticClassifyExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x42\n\x07\x63lasses\x18\x02 \x03(\x0b\x32(.logical_plan.v1.ResolvedClassDefinitionR\x07\x63lasses\x12 \n\x0btemperature\x18\x03 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x04 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x12K\n\x08\x65xamples\x18\x05 \x01(\x0b\x32*.logical_plan.v1.ClassifyExampleCollectionH\x01R\x08\x65xamples\x88\x01\x01\x42\x0e\n\x0c_model_aliasB\x0b\n\t_examples\"\xc5\x01\n\x14\x41nalyzeSentimentExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12 \n\x0btemperature\x18\x02 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x03 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x42\x0e\n\x0c_model_alias\"\x9d\x01\n\x0e\x45mbeddingsExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12I\n\x0bmodel_alias\x18\x02 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x42\x0e\n\x0c_model_alias\"\x84\x02\n\x15SemanticSummarizeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12<\n\x06\x66ormat\x18\x02 \x01(\x0b\x32$.logical_plan.v1.SummarizationFormatR\x06\x66ormat\x12 \n\x0btemperature\x18\x03 \x01(\x01R\x0btemperature\x12I\n\x0bmodel_alias\x18\x04 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x42\x0e\n\x0c_model_alias\"\x8b\x02\n\x14SemanticParsePDFExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12I\n\x0bmodel_alias\x18\x02 \x01(\x0b\x32#.logical_plan.v1.ResolvedModelAliasH\x00R\nmodelAlias\x88\x01\x01\x12*\n\x0epage_separator\x18\x03 \x01(\tH\x01R\rpageSeparator\x88\x01\x01\x12\'\n\x0f\x64\x65scribe_images\x18\x04 \x01(\x08R\x0e\x64\x65scribeImagesB\x0e\n\x0c_model_aliasB\x11\n\x0f_page_separator\"J\n\x16\x45mbeddingNormalizeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"\xf2\x01\n\x17\x45mbeddingSimilarityExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12=\n\nother_expr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprH\x00R\totherExpr\x12@\n\x0cquery_vector\x18\x03 \x01(\x0b\x32\x1b.logical_plan.v1.NumpyArrayH\x00R\x0bqueryVector\x12\x16\n\x06metric\x18\x04 \x01(\tR\x06metricB\x0c\n\nother_type\"g\n\x0cTextractExpr\x12;\n\ninput_expr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tinputExpr\x12\x1a\n\x08template\x18\x02 \x01(\tR\x08template\"\x8c\x03\n\rTextChunkExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12_\n\rconfiguration\x18\x02 \x01(\x0b\x32\x39.logical_plan.v1.TextChunkExpr.TextChunkExprConfigurationR\rconfiguration\x1a\xe7\x01\n\x1aTextChunkExprConfiguration\x12,\n\x12\x64\x65sired_chunk_size\x18\x02 \x01(\x05R\x10\x64\x65siredChunkSize\x12\x38\n\x18\x63hunk_overlap_percentage\x18\x03 \x01(\x05R\x16\x63hunkOverlapPercentage\x12\x61\n\x1a\x63hunk_length_function_name\x18\x04 \x01(\x0e\x32$.logical_plan.v1.ChunkLengthFunctionR\x17\x63hunkLengthFunctionName\"\xf6\x04\n\x16RecursiveTextChunkExpr\x12;\n\ninput_expr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tinputExpr\x12q\n\rconfiguration\x18\x02 \x01(\x0b\x32K.logical_plan.v1.RecursiveTextChunkExpr.RecursiveTextChunkExprConfigurationR\rconfiguration\x1a\xab\x03\n#RecursiveTextChunkExprConfiguration\x12,\n\x12\x64\x65sired_chunk_size\x18\x02 \x01(\x05R\x10\x64\x65siredChunkSize\x12\x38\n\x18\x63hunk_overlap_percentage\x18\x03 \x01(\x05R\x16\x63hunkOverlapPercentage\x12\x61\n\x1a\x63hunk_length_function_name\x18\x04 \x01(\x0e\x32$.logical_plan.v1.ChunkLengthFunctionR\x17\x63hunkLengthFunctionName\x12\x61\n\x1b\x63hunking_character_set_name\x18\x05 \x01(\x0e\x32\".logical_plan.v1.ChunkCharacterSetR\x18\x63hunkingCharacterSetName\x12V\n(chunking_character_set_custom_characters\x18\x06 \x03(\tR$chunkingCharacterSetCustomCharacters\"N\n\x0f\x43ountTokensExpr\x12;\n\ninput_expr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tinputExpr\"@\n\nConcatExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"_\n\rArrayJoinExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x1c\n\tdelimiter\x18\x02 \x01(\tR\tdelimiter\"v\n\x0c\x43ontainsExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x34\n\x06substr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06substr\"\x88\x01\n\x0f\x43ontainsAnyExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x18\n\x07substrs\x18\x02 \x03(\tR\x07substrs\x12)\n\x10\x63\x61se_insensitive\x18\x03 \x01(\x08R\x0f\x63\x61seInsensitive\"u\n\tRLikeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x36\n\x07pattern\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07pattern\"t\n\x08LikeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x36\n\x07pattern\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07pattern\"u\n\tILikeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x36\n\x07pattern\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x07pattern\"\xc4\x01\n\x0bTsParseExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12I\n\x06\x66ormat\x18\x02 \x01(\x0e\x32\x31.logical_plan.v1.TsParseExpr.TranscriptFormatTypeR\x06\x66ormat\"8\n\x14TranscriptFormatType\x12\x07\n\x03SRT\x10\x00\x12\x0b\n\x07GENERIC\x10\x01\x12\n\n\x06WEBVTT\x10\x02\"x\n\x0eStartsWithExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x34\n\x06substr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06substr\"v\n\x0c\x45ndsWithExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x34\n\x06substr\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06substr\"s\n\x0fRegexpSplitExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x18\n\x07pattern\x18\x02 \x01(\tR\x07pattern\x12\x14\n\x05limit\x18\x03 \x01(\x05R\x05limit\"\xbc\x01\n\rSplitPartExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12:\n\tdelimiter\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tdelimiter\x12=\n\x0bpart_number\x18\x03 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\npartNumber\"\xc1\x01\n\x10StringCasingExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x46\n\x04\x63\x61se\x18\x02 \x01(\x0e\x32\x32.logical_plan.v1.StringCasingExpr.StringCasingTypeR\x04\x63\x61se\"3\n\x10StringCasingType\x12\t\n\x05LOWER\x10\x00\x12\t\n\x05UPPER\x10\x01\x12\t\n\x05TITLE\x10\x02\"\xfa\x01\n\x0eStripCharsExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x37\n\x05\x63hars\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprH\x00R\x05\x63hars\x88\x01\x01\x12\x42\n\x04side\x18\x03 \x01(\x0e\x32..logical_plan.v1.StripCharsExpr.StripCharsSideR\x04side\"/\n\x0eStripCharsSide\x12\x08\n\x04LEFT\x10\x00\x12\t\n\x05RIGHT\x10\x01\x12\x08\n\x04\x42OTH\x10\x02\x42\x08\n\x06_chars\"\xcf\x01\n\x0bReplaceExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x34\n\x06search\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x06search\x12>\n\x0breplacement\x18\x03 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x0breplacement\x12\x18\n\x07literal\x18\x04 \x01(\x08R\x07literal\"A\n\rStrLengthExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"B\n\x0e\x42yteLengthExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"s\n\tJinjaExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\x12\x1a\n\x08template\x18\x02 \x01(\tR\x08template\x12\x16\n\x06strict\x18\x03 \x01(\x08R\x06strict\"\xb6\x01\n\x0e\x46uzzyRatioExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05other\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05other\x12>\n\x06method\x18\x03 \x01(\x0e\x32&.logical_plan.v1.FuzzySimilarityMethodR\x06method\"\xbf\x01\n\x17\x46uzzyTokenSortRatioExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05other\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05other\x12>\n\x06method\x18\x03 \x01(\x0e\x32&.logical_plan.v1.FuzzySimilarityMethodR\x06method\"\xbe\x01\n\x16\x46uzzyTokenSetRatioExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05other\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05other\x12>\n\x06method\x18\x03 \x01(\x0e\x32&.logical_plan.v1.FuzzySimilarityMethodR\x06method\"P\n\x06JqExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x14\n\x05query\x18\x02 \x01(\tR\x05query\"@\n\x0cJsonTypeExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"Z\n\x10JsonContainsExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\"@\n\x0cMdToJsonExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"\x89\x01\n\x13MdGetCodeBlocksExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12,\n\x0flanguage_filter\x18\x02 \x01(\tH\x00R\x0elanguageFilter\x88\x01\x01\x42\x12\n\x10_language_filter\"u\n\x11MdGenerateTocExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12 \n\tmax_level\x18\x02 \x01(\x05H\x00R\x08maxLevel\x88\x01\x01\x42\x0c\n\n_max_level\"l\n\x15MdExtractHeaderChunks\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12!\n\x0cheader_level\x18\x02 \x01(\x05R\x0bheaderLevel\"\xba\x01\n\x08WhenExpr\x12\x35\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprH\x00R\x04\x65xpr\x88\x01\x01\x12:\n\tcondition\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\tcondition\x12\x32\n\x05value\x18\x03 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05valueB\x07\n\x05_expr\"u\n\rOtherwiseExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x32\n\x05value\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05value\";\n\x07SumExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\";\n\x07\x41vgExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"=\n\tCountExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\";\n\x07MaxExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\";\n\x07MinExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"=\n\tFirstExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"<\n\x08ListExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\">\n\nStdDevExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"B\n\x0cGreatestExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"?\n\tLeastExpr\x12\x32\n\x05\x65xprs\x18\x01 \x03(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05\x65xprs\"v\n\x15UnresolvedLiteralExpr\x12\x36\n\tdata_type\x18\x01 \x01(\x0b\x32\x19.logical_plan.v1.DataTypeR\x08\x64\x61taType\x12%\n\x0eparameter_name\x18\x02 \x01(\tR\rparameterName\"<\n\x08YearExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"=\n\tMonthExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\";\n\x07\x44\x61yExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"<\n\x08HourExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\">\n\nMinuteExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\">\n\nSecondExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"C\n\x0fMilliSecondExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\"\x83\x01\n\x0b\x44\x61teAddExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x30\n\x04\x64\x61ys\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x64\x61ys\x12\x10\n\x03sub\x18\x03 \x01(\x08R\x03sub\"\x92\x01\n\x10TimestampAddExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x38\n\x08quantity\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x08quantity\x12\x12\n\x04unit\x18\x03 \x01(\tR\x04unit\"r\n\x0c\x44\x61teDiffExpr\x12.\n\x03\x65nd\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x03\x65nd\x12\x32\n\x05start\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05start\"\x8b\x01\n\x11TimestampDiffExpr\x12\x32\n\x05start\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x05start\x12.\n\x03\x65nd\x18\x02 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x03\x65nd\x12\x12\n\x04unit\x18\x03 \x01(\tR\x04unit\"U\n\rDateTruncExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x12\n\x04unit\x18\x02 \x01(\tR\x04unit\"\"\n\x07NowExpr\x12\x17\n\x07\x61s_date\x18\x01 \x01(\x08R\x06\x61sDate\"V\n\nToDateExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x16\n\x06\x66ormat\x18\x02 \x01(\tR\x06\x66ormat\"[\n\x0fToTimestampExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x16\n\x06\x66ormat\x18\x02 \x01(\tR\x06\x66ormat\"Z\n\x0e\x44\x61teFormatExpr\x12\x30\n\x04\x65xpr\x18\x01 \x01(\x0b\x32\x1c.logical_plan.v1.LogicalExprR\x04\x65xpr\x12\x16\n\x06\x66ormat\x18\x02 \x01(\tR\x06\x66ormatB\x80\x01\n\x13\x63om.logical_plan.v1B\x10\x45xpressionsProtoP\x01\xa2\x02\x03LXX\xaa\x02\x0eLogicalPlan.V1\xca\x02\x0eLogicalPlan\\V1\xe2\x02\x1aLogicalPlan\\V1\\GPBMetadata\xea\x02\x0fLogicalPlan::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'logical_plan.v1.expressions_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\023com.logical_plan.v1B\020ExpressionsProtoP\001\242\002\003LXX\252\002\016LogicalPlan.V1\312\002\016LogicalPlan\\V1\342\002\032LogicalPlan\\V1\\GPBMetadata\352\002\017LogicalPlan::V1'
  _globals['_LOGICALEXPR']._serialized_start=154
  _globals['_LOGICALEXPR']._serialized_end=6036
  _globals['_COLUMNEXPR']._serialized_start=6038
  _globals['_COLUMNEXPR']._serialized_end=6070
  _globals['_LITERALEXPR']._serialized_start=6072
  _globals['_LITERALEXPR']._serialized_end=6193
  _globals['_ALIASEXPR']._serialized_start=6195
  _globals['_ALIASEXPR']._serialized_end=6276
  _globals['_SORTEXPR']._serialized_start=6278
  _globals['_SORTEXPR']._serialized_end=6399
  _globals['_INDEXEXPR']._serialized_start=6401
  _globals['_INDEXEXPR']._serialized_end=6514
  _globals['_ARRAYEXPR']._serialized_start=6516
  _globals['_ARRAYEXPR']._serialized_end=6579
  _globals['_STRUCTEXPR']._serialized_start=6581
  _globals['_STRUCTEXPR']._serialized_end=6645
  _globals['_CASTEXPR']._serialized_start=6647
  _globals['_CASTEXPR']._serialized_end=6763
  _globals['_NOTEXPR']._serialized_start=6765
  _globals['_NOTEXPR']._serialized_end=6824
  _globals['_COALESCEEXPR']._serialized_start=6826
  _globals['_COALESCEEXPR']._serialized_end=6892
  _globals['_INEXPR']._serialized_start=6894
  _globals['_INEXPR']._serialized_end=7004
  _globals['_ISNULLEXPR']._serialized_start=7006
  _globals['_ISNULLEXPR']._serialized_end=7093
  _globals['_ARRAYLENGTHEXPR']._serialized_start=7095
  _globals['_ARRAYLENGTHEXPR']._serialized_end=7162
  _globals['_ARRAYCONTAINSEXPR']._serialized_start=7164
  _globals['_ARRAYCONTAINSEXPR']._serialized_end=7285
  _globals['_ARITHMETICEXPR']._serialized_start=7288
  _globals['_ARITHMETICEXPR']._serialized_end=7461
  _globals['_BOOLEANEXPR']._serialized_start=7464
  _globals['_BOOLEANEXPR']._serialized_end=7634
  _globals['_NUMERICCOMPARISONEXPR']._serialized_start=7637
  _globals['_NUMERICCOMPARISONEXPR']._serialized_end=7817
  _globals['_EQUALITYCOMPARISONEXPR']._serialized_start=7820
  _globals['_EQUALITYCOMPARISONEXPR']._serialized_end=8001
  _globals['_SEMANTICMAPEXPR']._serialized_start=8004
  _globals['_SEMANTICMAPEXPR']._serialized_end=8473
  _globals['_SEMANTICEXTRACTEXPR']._serialized_start=8476
  _globals['_SEMANTICEXTRACTEXPR']._serialized_end=8785
  _globals['_SEMANTICPREDEXPR']._serialized_start=8788
  _globals['_SEMANTICPREDEXPR']._serialized_end=9126
  _globals['_SEMANTICREDUCEEXPR']._serialized_start=9129
  _globals['_SEMANTICREDUCEEXPR']._serialized_end=9546
  _globals['_SEMANTICCLASSIFYEXPR']._serialized_start=9549
  _globals['_SEMANTICCLASSIFYEXPR']._serialized_end=9904
  _globals['_ANALYZESENTIMENTEXPR']._serialized_start=9907
  _globals['_ANALYZESENTIMENTEXPR']._serialized_end=10104
  _globals['_EMBEDDINGSEXPR']._serialized_start=10107
  _globals['_EMBEDDINGSEXPR']._serialized_end=10264
  _globals['_SEMANTICSUMMARIZEEXPR']._serialized_start=10267
  _globals['_SEMANTICSUMMARIZEEXPR']._serialized_end=10527
  _globals['_SEMANTICPARSEPDFEXPR']._serialized_start=10530
  _globals['_SEMANTICPARSEPDFEXPR']._serialized_end=10797
  _globals['_EMBEDDINGNORMALIZEEXPR']._serialized_start=10799
  _globals['_EMBEDDINGNORMALIZEEXPR']._serialized_end=10873
  _globals['_EMBEDDINGSIMILARITYEXPR']._serialized_start=10876
  _globals['_EMBEDDINGSIMILARITYEXPR']._serialized_end=11118
  _globals['_TEXTRACTEXPR']._serialized_start=11120
  _globals['_TEXTRACTEXPR']._serialized_end=11223
  _globals['_TEXTCHUNKEXPR']._serialized_start=11226
  _globals['_TEXTCHUNKEXPR']._serialized_end=11622
  _globals['_TEXTCHUNKEXPR_TEXTCHUNKEXPRCONFIGURATION']._serialized_start=11391
  _globals['_TEXTCHUNKEXPR_TEXTCHUNKEXPRCONFIGURATION']._serialized_end=11622
  _globals['_RECURSIVETEXTCHUNKEXPR']._serialized_start=11625
  _globals['_RECURSIVETEXTCHUNKEXPR']._serialized_end=12255
  _globals['_RECURSIVETEXTCHUNKEXPR_RECURSIVETEXTCHUNKEXPRCONFIGURATION']._serialized_start=11828
  _globals['_RECURSIVETEXTCHUNKEXPR_RECURSIVETEXTCHUNKEXPRCONFIGURATION']._serialized_end=12255
  _globals['_COUNTTOKENSEXPR']._serialized_start=12257
  _globals['_COUNTTOKENSEXPR']._serialized_end=12335
  _globals['_CONCATEXPR']._serialized_start=12337
  _globals['_CONCATEXPR']._serialized_end=12401
  _globals['_ARRAYJOINEXPR']._serialized_start=12403
  _globals['_ARRAYJOINEXPR']._serialized_end=12498
  _globals['_CONTAINSEXPR']._serialized_start=12500
  _globals['_CONTAINSEXPR']._serialized_end=12618
  _globals['_CONTAINSANYEXPR']._serialized_start=12621
  _globals['_CONTAINSANYEXPR']._serialized_end=12757
  _globals['_RLIKEEXPR']._serialized_start=12759
  _globals['_RLIKEEXPR']._serialized_end=12876
  _globals['_LIKEEXPR']._serialized_start=12878
  _globals['_LIKEEXPR']._serialized_end=12994
  _globals['_ILIKEEXPR']._serialized_start=12996
  _globals['_ILIKEEXPR']._serialized_end=13113
  _globals['_TSPARSEEXPR']._serialized_start=13116
  _globals['_TSPARSEEXPR']._serialized_end=13312
  _globals['_TSPARSEEXPR_TRANSCRIPTFORMATTYPE']._serialized_start=13256
  _globals['_TSPARSEEXPR_TRANSCRIPTFORMATTYPE']._serialized_end=13312
  _globals['_STARTSWITHEXPR']._serialized_start=13314
  _globals['_STARTSWITHEXPR']._serialized_end=13434
  _globals['_ENDSWITHEXPR']._serialized_start=13436
  _globals['_ENDSWITHEXPR']._serialized_end=13554
  _globals['_REGEXPSPLITEXPR']._serialized_start=13556
  _globals['_REGEXPSPLITEXPR']._serialized_end=13671
  _globals['_SPLITPARTEXPR']._serialized_start=13674
  _globals['_SPLITPARTEXPR']._serialized_end=13862
  _globals['_STRINGCASINGEXPR']._serialized_start=13865
  _globals['_STRINGCASINGEXPR']._serialized_end=14058
  _globals['_STRINGCASINGEXPR_STRINGCASINGTYPE']._serialized_start=14007
  _globals['_STRINGCASINGEXPR_STRINGCASINGTYPE']._serialized_end=14058
  _globals['_STRIPCHARSEXPR']._serialized_start=14061
  _globals['_STRIPCHARSEXPR']._serialized_end=14311
  _globals['_STRIPCHARSEXPR_STRIPCHARSSIDE']._serialized_start=14254
  _globals['_STRIPCHARSEXPR_STRIPCHARSSIDE']._serialized_end=14301
  _globals['_REPLACEEXPR']._serialized_start=14314
  _globals['_REPLACEEXPR']._serialized_end=14521
  _globals['_STRLENGTHEXPR']._serialized_start=14523
  _globals['_STRLENGTHEXPR']._serialized_end=14588
  _globals['_BYTELENGTHEXPR']._serialized_start=14590
  _globals['_BYTELENGTHEXPR']._serialized_end=14656
  _globals['_JINJAEXPR']._serialized_start=14658
  _globals['_JINJAEXPR']._serialized_end=14773
  _globals['_FUZZYRATIOEXPR']._serialized_start=14776
  _globals['_FUZZYRATIOEXPR']._serialized_end=14958
  _globals['_FUZZYTOKENSORTRATIOEXPR']._serialized_start=14961
  _globals['_FUZZYTOKENSORTRATIOEXPR']._serialized_end=15152
  _globals['_FUZZYTOKENSETRATIOEXPR']._serialized_start=15155
  _globals['_FUZZYTOKENSETRATIOEXPR']._serialized_end=15345
  _globals['_JQEXPR']._serialized_start=15347
  _globals['_JQEXPR']._serialized_end=15427
  _globals['_JSONTYPEEXPR']._serialized_start=15429
  _globals['_JSONTYPEEXPR']._serialized_end=15493
  _globals['_JSONCONTAINSEXPR']._serialized_start=15495
  _globals['_JSONCONTAINSEXPR']._serialized_end=15585
  _globals['_MDTOJSONEXPR']._serialized_start=15587
  _globals['_MDTOJSONEXPR']._serialized_end=15651
  _globals['_MDGETCODEBLOCKSEXPR']._serialized_start=15654
  _globals['_MDGETCODEBLOCKSEXPR']._serialized_end=15791
  _globals['_MDGENERATETOCEXPR']._serialized_start=15793
  _globals['_MDGENERATETOCEXPR']._serialized_end=15910
  _globals['_MDEXTRACTHEADERCHUNKS']._serialized_start=15912
  _globals['_MDEXTRACTHEADERCHUNKS']._serialized_end=16020
  _globals['_WHENEXPR']._serialized_start=16023
  _globals['_WHENEXPR']._serialized_end=16209
  _globals['_OTHERWISEEXPR']._serialized_start=16211
  _globals['_OTHERWISEEXPR']._serialized_end=16328
  _globals['_SUMEXPR']._serialized_start=16330
  _globals['_SUMEXPR']._serialized_end=16389
  _globals['_AVGEXPR']._serialized_start=16391
  _globals['_AVGEXPR']._serialized_end=16450
  _globals['_COUNTEXPR']._serialized_start=16452
  _globals['_COUNTEXPR']._serialized_end=16513
  _globals['_MAXEXPR']._serialized_start=16515
  _globals['_MAXEXPR']._serialized_end=16574
  _globals['_MINEXPR']._serialized_start=16576
  _globals['_MINEXPR']._serialized_end=16635
  _globals['_FIRSTEXPR']._serialized_start=16637
  _globals['_FIRSTEXPR']._serialized_end=16698
  _globals['_LISTEXPR']._serialized_start=16700
  _globals['_LISTEXPR']._serialized_end=16760
  _globals['_STDDEVEXPR']._serialized_start=16762
  _globals['_STDDEVEXPR']._serialized_end=16824
  _globals['_GREATESTEXPR']._serialized_start=16826
  _globals['_GREATESTEXPR']._serialized_end=16892
  _globals['_LEASTEXPR']._serialized_start=16894
  _globals['_LEASTEXPR']._serialized_end=16957
  _globals['_UNRESOLVEDLITERALEXPR']._serialized_start=16959
  _globals['_UNRESOLVEDLITERALEXPR']._serialized_end=17077
  _globals['_YEAREXPR']._serialized_start=17079
  _globals['_YEAREXPR']._serialized_end=17139
  _globals['_MONTHEXPR']._serialized_start=17141
  _globals['_MONTHEXPR']._serialized_end=17202
  _globals['_DAYEXPR']._serialized_start=17204
  _globals['_DAYEXPR']._serialized_end=17263
  _globals['_HOUREXPR']._serialized_start=17265
  _globals['_HOUREXPR']._serialized_end=17325
  _globals['_MINUTEEXPR']._serialized_start=17327
  _globals['_MINUTEEXPR']._serialized_end=17389
  _globals['_SECONDEXPR']._serialized_start=17391
  _globals['_SECONDEXPR']._serialized_end=17453
  _globals['_MILLISECONDEXPR']._serialized_start=17455
  _globals['_MILLISECONDEXPR']._serialized_end=17522
  _globals['_DATEADDEXPR']._serialized_start=17525
  _globals['_DATEADDEXPR']._serialized_end=17656
  _globals['_TIMESTAMPADDEXPR']._serialized_start=17659
  _globals['_TIMESTAMPADDEXPR']._serialized_end=17805
  _globals['_DATEDIFFEXPR']._serialized_start=17807
  _globals['_DATEDIFFEXPR']._serialized_end=17921
  _globals['_TIMESTAMPDIFFEXPR']._serialized_start=17924
  _globals['_TIMESTAMPDIFFEXPR']._serialized_end=18063
  _globals['_DATETRUNCEXPR']._serialized_start=18065
  _globals['_DATETRUNCEXPR']._serialized_end=18150
  _globals['_NOWEXPR']._serialized_start=18152
  _globals['_NOWEXPR']._serialized_end=18186
  _globals['_TODATEEXPR']._serialized_start=18188
  _globals['_TODATEEXPR']._serialized_end=18274
  _globals['_TOTIMESTAMPEXPR']._serialized_start=18276
  _globals['_TOTIMESTAMPEXPR']._serialized_end=18367
  _globals['_DATEFORMATEXPR']._serialized_start=18369
  _globals['_DATEFORMATEXPR']._serialized_end=18459
# @@protoc_insertion_point(module_scope)
